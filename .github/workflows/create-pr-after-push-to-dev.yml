name: Create PRs from dev to feature branches after pushing to dev

on:
  #push:
    #branches:
      #- dev
  pull_request:
    types: 
      - closed
    branches:
      - dev

jobs:
  create-prs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get triggering branch
        id: get_branch
        run: |
          echo 1
          echo "${GITHUB_REF}"
          echo 2
          echo "${GITHUB_REF#refs}"
          echo 3
          echo "${GITHUB_REF#refs/heads/}"
          echo "branch=${GITHUB_REF#refs/heads/}" >> "$GITHUB_OUTPUT"
          
      - name: Read output
        run: echo "branch=${{ steps.get_branch.outputs.branch }}"

      - name: Get branch list minus main and dev
        id: get_branches
        run: |
          git fetch origin --prune
          echo 1
          git branch -r
          echo 2
          git branch -r | grep -Ev '.*main|dev.*'
          echo 3
          git branch -r | grep -Ev '.*main|dev.*' | sed 's|origin/||g'
          echo 4
          git branch -r | grep -Ev '.*main|dev.*' | sed 's|origin/||g' | sed 's| *||g'
          # echo "branches=$(git branch -r | grep -Ev '.*main|dev.*' | sed 's|origin/||g' | sed 's| *||g')" >> "$GITHUB_OUTPUT"
          {
            echo 'branches<<EOF'
            git branch -r | grep -Ev '.*main|dev.*' | sed 's|origin/||g' | sed 's| *||g'
            echo EOF
          } >> "$GITHUB_OUTPUT"
          
      - name: Read output
        run: echo "branch=${{ steps.get_branches.outputs.branches }}"

      - name: Create PRs
        run: |
          for branch in ${{ steps.get_branches.outputs.branches }}; do
            if [ "$branch" != "${{ steps.get_branch.outputs.branch }}" ]; then
              pr_exist=$(gh pr list --state open --head "dev:$branch" --json number | jq 'length')
              if [ $pr_exist -eq 0 ]; then
                gh pr create --title "Merge dev into $branch" --body "This PR automatically merges changes from dev into $branch." --base $branch --head dev
              fi
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_ACTION_TOKEN }}
